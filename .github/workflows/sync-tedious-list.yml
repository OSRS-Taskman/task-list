name: Sync Tedious Task List

on:
  push:
    branches: ["main"]
    paths: ["lists/tedious.json"]
  workflow_dispatch:
    inputs:
      target_repo:
        description: "Target repository (owner/repo)"
        required: true
        default: "RedSparr0w/runelite-generate-task"
      target_path:
        description: "Target file path in destination repo"
        required: true
        default: "src/main/resources/com/logmaster/domain/tedious.json"

jobs:
  sync-tedious-list:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4

      - name: Set target repository
        id: set-target
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "target_repo=${{ github.event.inputs.target_repo }}" >> $GITHUB_OUTPUT
            echo "target_path=${{ github.event.inputs.target_path }}" >> $GITHUB_OUTPUT
          else
            echo "target_repo=RedSparr0w/runelite-generate-task" >> $GITHUB_OUTPUT
            echo "target_path=src/main/resources/com/logmaster/domain/tedious.json" >> $GITHUB_OUTPUT
          fi

          # Extract repo name from owner/repo format
          repo_name=$(echo "${{ github.event.inputs.target_repo || 'RedSparr0w/runelite-generate-task' }}" | cut -d'/' -f2)
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT

      - name: Fork and clone target repository
        run: |
          # Fork the target repository
          gh repo fork ${{ steps.set-target.outputs.target_repo }} --clone=true --remote=true

          # Change to the cloned directory
          cd $(echo "${{ steps.set-target.outputs.repo_name }}")

          # Configure git
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

          # Create and switch to sync branch
          git checkout -b auto-sync/tedious

          # Copy the file
          mkdir -p $(dirname "${{ steps.set-target.outputs.target_path }}")
          cp ../lists/tedious.json "${{ steps.set-target.outputs.target_path }}"

          # Check if there are changes
          if [ -n "$(git status --porcelain)" ]; then
            # Commit and push changes
            git add .
            git commit -m "Auto-sync: Update tedious task list

            Updated from ${{ github.repository }}@${{ github.sha }}"
            
            git push origin auto-sync/tedious
            
            # Create PR using GitHub CLI
            gh pr create \
              --repo ${{ steps.set-target.outputs.target_repo }} \
              --title "🤖 Auto-sync: Update tedious task list" \
              --body "## Automated Task List Update

            **Source:** ${{ github.repository }}@${{ github.sha }}
            **Updated:** \`${{ steps.set-target.outputs.target_path }}\`

            Please review and merge when ready.

            ---
            *Created automatically by GitHub Actions*" \
              --head ${{ github.actor }}:auto-sync/tedious \
              --base main || echo "PR might already exist"
              
            echo "pr_created=true" >> $GITHUB_ENV
          else
            echo "No changes detected"
            echo "pr_created=false" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ github.token }}
          commit-message: |
            Auto-sync: Update tedious task list

            Updated from ${{ github.repository }}@${{ github.sha }}
          title: "🤖 Auto-sync: Update tedious task list"
          body: |
            ## Automated Task List Update

            **Source:** ${{ github.repository }}@${{ github.sha }}
            **Updated:** `${{ steps.set-target.outputs.target_path }}`

            Please review and merge when ready.

            ---
            *Created automatically by GitHub Actions*
          branch: auto-sync/tedious
          delete-branch: true

      - name: Create summary
        run: |
          echo "## Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Source file**: \`lists/tedious.json\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Target repository**: \`${{ steps.set-target.outputs.target_repo }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Target path**: \`${{ steps.set-target.outputs.target_path }}\`" >> $GITHUB_STEP_SUMMARY

          if [ "${{ env.pr_created }}" == "true" ]; then
            echo "- **Status**: ✅ Pull request created/updated successfully" >> $GITHUB_STEP_SUMMARY
            echo "- **Fork**: \`${{ github.actor }}/${{ steps.set-target.outputs.repo_name }}\`" >> $GITHUB_STEP_SUMMARY
            echo "- **Action**: Please review and merge the PR in the target repository" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ℹ️ No changes detected, no PR needed" >> $GITHUB_STEP_SUMMARY
          fi
